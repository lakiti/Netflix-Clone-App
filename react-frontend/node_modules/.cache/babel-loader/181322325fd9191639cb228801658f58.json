{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/spring_boy/NetflixCloneProject/react-view/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport TMDBMovieApiService from \"../apis/TMDBMovieApiService\";\nimport Row from \"./Row\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props); // console.log(\"Main props\", props);\n    // console.log(\n    //   \"Main props\",\n    //   props.location.search.replace(\"?\", \"\").split(\"=\")\n    // );\n    //페이스북 로그인했을때 아이디값이 queryString으로 날아옴! 해당부분 받아서 세션 저장하는 부분임\n\n    this.getAllMoviesByGenre = async () => {\n      for (let i = 0; i < this.state.genre.length; i++) {\n        //debugger;\n        await TMDBMovieApiService.getGenreList(this.state.genre[i]).then(res => {\n          //console.log(res.data.results);\n          switch (i) {\n            case 0:\n              // 액션\n              this.setState({\n                actions: res.data.results.slice(10)\n              }, () => {});\n              break;\n\n            case 1:\n              // 어드벤처\n              this.setState({\n                adventures: res.data.results.slice(10)\n              }, () => {});\n              break;\n\n            case 2:\n              // 코미디\n              this.setState({\n                comedys: res.data.results.slice(10)\n              }, () => {});\n              break;\n\n            case 3:\n              // 다큐멘터리\n              this.setState({\n                documentarys: res.data.results.slice(10)\n              }, () => {});\n              break;\n\n            case 4:\n              // 가족 영화\n              this.setState({\n                familys: res.data.results.slice(10)\n              }, () => {});\n              break;\n\n            case 5:\n              // 판타지\n              this.setState({\n                fantasys: res.data.results.slice(10)\n              }, () => {});\n              break;\n\n            case 6:\n              // 호러\n              this.setState({\n                horrors: res.data.results.slice(10)\n              }, () => {});\n              break;\n\n            default:\n              break;\n          }\n        }).catch(err => {\n          console.error(\"getGenreList get 오류 : \", err);\n        });\n      }\n    };\n\n    this.getMainPopularMovies = async () => {\n      await TMDBMovieApiService.getPopularMovies(1).then(res => {\n        this.setState({\n          populars: res.data.results\n        }, () => {});\n      }).catch(err => {\n        console.error('getMainPopularMovies 오류 : ', err);\n      });\n    };\n\n    console.log(props.location.search);\n\n    if (props.location.search !== '') {\n      let id = props.location.search.replace(\"?\", \"\").split(\"=\");\n      console.log(id);\n      console.log(id[1]);\n      sessionStorage.setItem(\"user\", id[1]);\n    }\n\n    this.state = {\n      //   genre: ['28', '12', '35', '99', '10751', '14', '27'],\n      genre: [\"Action\", \"Adventure\", \"Comedy\", \"Documentary\", \"Family\", \"Fantasy\", \"Horror\"],\n      populars: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getAllMoviesByGenre();\n    this.getMainPopularMovies();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#181818\",\n        paddingRight: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: \"https://youtube.com/embed/UIA1QoGATHY\",\n            title: \"Youtube Video Player\",\n            className: \"video\",\n            allowFullScreen: true,\n            frameBorder: \"0\",\n            style: {\n              width: \"100%\",\n              height: \"80vh\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-light\",\n            style: {\n              margin: 10\n            },\n            children: \"\\u25B6 \\uC7AC\\uC0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            children: \"\\uC0C1\\uC138 \\uC815\\uBCF4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            actions: this.state.actions,\n            adventures: this.state.adventures,\n            comedys: this.state.comedys,\n            documentarys: this.state.documentarys,\n            familys: this.state.familys,\n            fantasys: this.state.fantasys,\n            horrors: this.state.horrors,\n            populars: this.state.populars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/home/spring_boy/NetflixCloneProject/react-view/src/components/Main.js"],"names":["React","Component","TMDBMovieApiService","Row","MainPage","constructor","props","getAllMoviesByGenre","i","state","genre","length","getGenreList","then","res","setState","actions","data","results","slice","adventures","comedys","documentarys","familys","fantasys","horrors","catch","err","console","error","getMainPopularMovies","getPopularMovies","populars","log","location","search","id","replace","split","sessionStorage","setItem","componentDidMount","render","backgroundColor","paddingRight","width","height","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TMDBMovieApiService from \"../apis/TMDBMovieApiService\";\nimport Row from \"./Row\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    // console.log(\"Main props\", props);\n    // console.log(\n    //   \"Main props\",\n    //   props.location.search.replace(\"?\", \"\").split(\"=\")\n    // );\n    //페이스북 로그인했을때 아이디값이 queryString으로 날아옴! 해당부분 받아서 세션 저장하는 부분임\n    console.log(props.location.search);\n    if(props.location.search!==''){\n      let id = props.location.search.replace(\"?\", \"\").split(\"=\");\n      console.log(id);\n      console.log(id[1]);\n      sessionStorage.setItem(\"user\", id[1]);\n    }\n    this.state = {\n      //   genre: ['28', '12', '35', '99', '10751', '14', '27'],\n      genre: [\n        \"Action\",\n        \"Adventure\",\n        \"Comedy\",\n        \"Documentary\",\n        \"Family\",\n        \"Fantasy\",\n        \"Horror\",\n      ],\n      populars: '',\n    };\n  }\n  componentDidMount() {\n    this.getAllMoviesByGenre();\n    this.getMainPopularMovies();\n  }\n\n  getAllMoviesByGenre = async () => {\n    for (let i = 0; i < this.state.genre.length; i++) {\n      //debugger;\n      await TMDBMovieApiService.getGenreList(this.state.genre[i])\n        .then((res) => {\n          //console.log(res.data.results);\n          switch (i) {\n            case 0: // 액션\n              this.setState({ actions: res.data.results.slice(10) }, () => {});\n              break;\n            case 1: // 어드벤처\n              this.setState(\n                { adventures: res.data.results.slice(10) },\n                () => {}\n              );\n              break;\n            case 2: // 코미디\n              this.setState({ comedys: res.data.results.slice(10) }, () => {});\n              break;\n            case 3: // 다큐멘터리\n              this.setState(\n                { documentarys: res.data.results.slice(10) },\n                () => {}\n              );\n              break;\n            case 4: // 가족 영화\n              this.setState({ familys: res.data.results.slice(10) }, () => {});\n              break;\n            case 5: // 판타지\n              this.setState({ fantasys: res.data.results.slice(10) }, () => {});\n              break;\n            case 6: // 호러\n              this.setState({ horrors: res.data.results.slice(10) }, () => {});\n              break;\n            default:\n              break;\n          }\n        })\n        .catch((err) => {\n          console.error(\"getGenreList get 오류 : \", err);\n        });\n    }\n  };\n  getMainPopularMovies = async () => {\n    await TMDBMovieApiService.getPopularMovies(1)\n      .then((res) => {\n        this.setState({ populars: res.data.results }, () => {});\n      })\n      .catch((err) => {\n        console.error('getMainPopularMovies 오류 : ', err)\n      });\n  };\n  render() {\n    return (\n      <div style={{ backgroundColor: \"#181818\", paddingRight: \"15px\" }}>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <iframe\n              src=\"https://youtube.com/embed/UIA1QoGATHY\"\n              title=\"Youtube Video Player\"\n              className=\"video\"\n              allowFullScreen\n              frameBorder=\"0\"\n              style={{ width: \"100%\", height: \"80vh\" }}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <button\n              type=\"button\"\n              className=\"btn btn-light\"\n              style={{ margin: 10 }}\n              children=\"▶ 재생\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              children=\"상세 정보\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Row\n              actions={this.state.actions}\n              adventures={this.state.adventures}\n              comedys={this.state.comedys}\n              documentarys={this.state.documentarys}\n              familys={this.state.familys}\n              fantasys={this.state.fantasys}\n              horrors={this.state.horrors}\n              populars={this.state.populars}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}