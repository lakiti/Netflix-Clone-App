{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/spring_boy/CloneNetflixByShakkib/react-frontend/src/components/DetailContent.js\";\nimport React, { Component } from \"react\";\nimport { Modal } from \"reactstrap\";\nimport TMDBMovieApiService from \"../apis/TMDBMovieApiService\";\nimport FavoriteMovieApiService from \"../apis/FavoriteMovieApiService\";\nimport CommentApiService from \"../apis/CommentApiService\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport Comments from \"./Comments\";\n\nclass DetailContentCompoent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMovieSave = async () => {\n      var temp = {\n        movie_id: this.state.id,\n        movie_original_title: this.props.movie.original_title,\n        poster_path: this.props.movie.poster_path,\n        user_id: window.sessionStorage.getItem(\"user\") //user_email : JSON.parse(window.sessionStorage.getItem(\"user\")).userEmail,\n\n      };\n      console.log(temp); // Save only when there is a user session value (login)\n\n      if (sessionStorage.getItem('user') != null) {\n        await FavoriteMovieApiService.addMovie(temp).then(res => {\n          console.log(res.data); //// Determining whether the movie is on my wish list or not.\n\n          if (res.data === 'success') {\n            console.info('save success', this.props.databaseid);\n            alert(\"I wished\");\n            this.setState({\n              modal: false\n            });\n          } else {\n            alert(\"It's already on your wishlist.\");\n            this.setState({\n              modal: false\n            });\n          }\n        }).catch(err => {\n          console.error('ApiService.addMovies Error', err);\n          alert('Wish list save error\\nPlease contact the administrator');\n        }); ////If you are not logged in, move to the login screen when you click the wish button\n      } else {\n        alert('It is available after login.');\n        window.location.href = \"http://localhost:3000/login\";\n      }\n    };\n\n    this.handleMovieDelete = async () => {\n      await FavoriteMovieApiService.removeMovie2(this.state.id).then(res => {\n        console.info('deletion success', res.state);\n        console.log(res.data);\n\n        if (res.data === 'success') {\n          alert(\"Deleted.\"); //When deleting from the My Favorites page\n\n          if (document.location.href === \"http://localhost:3000/myContent\") {\n            this.props.loadFavoriteMovie();\n            this.setState({\n              modal: false\n            });\n          } else {\n            //When deleting from another screen\n            this.setState({\n              modal: false\n            });\n          }\n        } else {\n          // When you click the delete button on the unlisted list\n          alert('Its not on my wish list.');\n          return;\n        }\n      }).catch(err => {\n        console.error('ApiService.removeMovie Error', err);\n        alert('Wish list deletion error\\nPlease contact the administrator');\n      });\n    };\n\n    this.getAllInfo = () => {\n      this.getMovieDetails();\n      this.getMoviesYoutubeKey();\n      this.getMovieCredits();\n      this.getCommentList();\n    };\n\n    this.getMovieDetails = async () => {\n      let res = await TMDBMovieApiService.getMovieDetails(this.state.id);\n      let genres = res.data.genres.map(item => {\n        return item.name;\n      });\n      this.setState({\n        details: res.data,\n        genres: genres\n      }, () => {\n        console.log(\"Details value when clicked!\", this.state.details);\n        console.log(\"this.state.poster_image : \", this.state.poster_image); // console.log('Genre value when pressed!', this.state.genres);\n      });\n    };\n\n    this.getMoviesYoutubeKey = async () => {\n      let res = await TMDBMovieApiService.getYoutubeKey(this.state.id); //If there is a YouTube video, save the key value\n\n      if (res.data.results[0] !== undefined) {\n        console.log(\"youtubeKey data:\", res.data.results[0].key); //Only one representative YouTube video was brought and saved.\n\n        this.setState({\n          key: \"https://youtube.com/embed/\" + res.data.results[0].key + \"?autoplay=1&controls=0&rel=0&loop=1\"\n        }, () => {// console.log('youtubeKey value when pressed!', this.state.key);\n        }); //If it does not exist, the key is stored as false.\n      } else {\n        this.setState({\n          key: false\n        });\n      }\n    };\n\n    this.getMovieCredits = async () => {\n      let res = await TMDBMovieApiService.getCredits(this.state.id);\n      let cast = res.data.cast.slice(0, 6).map(item => {\n        return item.name;\n      }); // console.log('Participating staff information:', res.data);\n      // console.log('Participating actors:', res.data.cast);\n\n      this.setState({\n        cast: cast\n      }, () => {// console.log('Cast value when pressed!', this.state.cast);\n      });\n    };\n\n    this.getCommentList = async () => {\n      let res = await CommentApiService.getCommentList(this.state.id);\n      let commentList = res.data;\n      this.setState({\n        comments: commentList\n      }, () => {\n        console.log(\"Comment information!!!!\");\n        console.log(this.state.comments);\n      });\n    };\n\n    this.seperactor = Array => {\n      var seperactor = \",\";\n      var tempString = \"\";\n\n      for (var i = 0; i < Array.length; i++) {\n        if (i < Array.length - 1) {\n          tempString += Array[i] + seperactor;\n        } else if (i === Array.length - 1) {\n          tempString += Array[i];\n        }\n      }\n\n      return tempString;\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleText = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.writeMovieComment = () => {\n      let user_id = sessionStorage.getItem(\"user\"); //Check the session value to see if you are logged in\n\n      if (user_id == null) {\n        alert(\"Login is required\"); //Send to login page\n\n        window.location.href = \"http://localhost:3000/login\";\n      }\n\n      let content = this.state.content; //객체생성\n\n      let comment = {\n        movie_id: this.state.id,\n        user_id: user_id,\n        content: content\n      }; //object creation\n\n      CommentApiService.writeMovieComment(comment).then(res => {\n        console.log(res.data);\n        let result = res.data;\n\n        if (result === 1) {\n          alert(\"Completion of comment\");\n          this.getCommentList(); //Reset your comments\n\n          this.setState({\n            content: \"\"\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteComment = (id, user_id) => {\n      // console.log(typeof this.props.user_id); //number\n      // console.log(typeof sessionStorage.getItem(\"user\")); //string\n      console.log(id); //ID value of the comment!\n\n      console.log(user_id); //If the logged in user and the commenter are the same person, it can be deleted\n\n      if (sessionStorage.getItem(\"user\") === user_id.toString()) {\n        CommentApiService.deleteComment(id).then(res => {\n          console.log(res.data); //deletion success\n\n          if (res.status === 200) {\n            alert(\"Comment has been deleted\"); //Reload the comment list after deletion\n\n            this.getCommentList();\n          }\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.state = {\n      user_id: this.props.user_id,\n      id: this.props.id,\n      movie: this.props.movie,\n      modal: false,\n      //Default modal value false\n      details: {},\n      genres: [],\n      //// Show the poster image as it is\n      poster_image: \"http://image.tmdb.org/t/p/w500\" + this.props.movie.poster_path,\n      content: \"\" //comment\n\n    };\n  } //Add to wish list\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn bg-transparent\",\n        onClick: this.toggle,\n        children: this.state.poster_image === \"http://image.tmdb.org/t/p/w500null\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: \"https://i.ytimg.com/vi/GV3HUDMQ-F8/maxresdefault.jpg\",\n          height: \"270\",\n          width: \"180\",\n          style: {\n            margin: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.poster_image,\n          width: \"180px\",\n          alt: \"new\",\n          style: {\n            borderRadius: 5\n          },\n          onClick: this.getAllInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        size: \"lg\",\n        className: \"my-modal\",\n        style: {\n          maxWidth: \"900px\",\n          width: \"80%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: this.toggle,\n              style: {\n                paddingRight: \"10px\",\n                margin: \"5px\",\n                textDecoration: \"none\",\n                color: \"#777777\",\n                fontWeight: \"bold\",\n                fontSize: \"x-large\",\n                flex: \"1\",\n                textAlign: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon.XCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vedio\",\n                children: [this.state.key ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  title: \"Youtube Video Player\",\n                  className: \"video\",\n                  allowFullScreen: true,\n                  frameBorder: \"0\",\n                  style: {\n                    width: \"100%\",\n                    height: \"50vh\",\n                    margin: 0,\n                    padding: 0\n                  },\n                  allow: \"autoplay\",\n                  src: this.state.key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this) : \"There is no Youtube video\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: this.state.details && this.state.details.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flexDirection: \"row\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"btn btn-light btn-lg\",\n                      type: \"button\",\n                      value: \"\\u25B6 play\",\n                      style: {\n                        margin: 5\n                      },\n                      onClick: () => window.open(`${this.state.key}`, \"_blank\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"btn btn-light btn-lg\",\n                      type: \"button\",\n                      value: \"\\u2764\",\n                      style: {\n                        margin: 5,\n                        borderRadius: 20\n                      },\n                      onClick: () => this.handleMovieSave()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 23\n                    }, this), sessionStorage.getItem(\"user\") != null ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"btn btn-light btn-lg\",\n                      type: \"button\",\n                      value: \"\\u274C \",\n                      style: {\n                        margin: 5,\n                        borderRadius: 20\n                      },\n                      onClick: () => this.handleMovieDelete(this.state.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 25\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            style: {\n              paddingLeft: \"24px\",\n              marginTop: 15\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"contentFont\",\n                  children: [this.state.details.release_date && this.state.details.release_date, \" \", this.state.details.runtime && this.state.details.runtime, \"\\uBD84\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"contentFont\",\n                  style: {\n                    marginTop: 15\n                  },\n                  children: this.state.details.overview ? this.state.details.overview : \"No plot summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    flexDirection: \"row\",\n                    marginBottom: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textDecoration: \"none\",\n                      color: \"#777777\"\n                    },\n                    children: \"\\uCD9C\\uC5F0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailFont\",\n                    children: this.state.cast && this.seperactor(this.state.cast)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    flexDirection: \"row\",\n                    marginBottom: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textDecoration: \"none\",\n                      color: \"#777777\"\n                    },\n                    children: \"\\uC7A5\\uB974\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailFont\",\n                    children: this.state.genres && this.seperactor(this.state.genres)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            style: {\n              paddingLeft: \"24px\",\n              marginTop: 20\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"form-inline\",\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"Please enter a comment\",\n                  className: \"form-control\",\n                  rows: \"2\",\n                  cols: \"100\",\n                  name: \"content\",\n                  value: this.state.content,\n                  onChange: e => this.handleText(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger btn-lg\",\n                  style: {\n                    margin: 10\n                  },\n                  onClick: () => this.writeMovieComment(),\n                  children: \"\\uB313\\uAE00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment\",\n                children: this.state.comments ? this.state.comments.map(item => {\n                  return /*#__PURE__*/_jsxDEV(Comments, {\n                    id: item.id,\n                    movie_id: item.movie_id,\n                    user_id: item.user_id,\n                    content: item.content,\n                    deleteComment: this.deleteComment\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 27\n                  }, this);\n                }) : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DetailContentCompoent;","map":{"version":3,"sources":["/home/spring_boy/CloneNetflixByShakkib/react-frontend/src/components/DetailContent.js"],"names":["React","Component","Modal","TMDBMovieApiService","FavoriteMovieApiService","CommentApiService","Icon","Comments","DetailContentCompoent","constructor","props","handleMovieSave","temp","movie_id","state","id","movie_original_title","movie","original_title","poster_path","user_id","window","sessionStorage","getItem","console","log","addMovie","then","res","data","info","databaseid","alert","setState","modal","catch","err","error","location","href","handleMovieDelete","removeMovie2","document","loadFavoriteMovie","getAllInfo","getMovieDetails","getMoviesYoutubeKey","getMovieCredits","getCommentList","genres","map","item","name","details","poster_image","getYoutubeKey","results","undefined","key","getCredits","cast","slice","commentList","comments","seperactor","Array","tempString","i","length","toggle","handleText","e","target","value","writeMovieComment","content","comment","result","deleteComment","toString","status","render","margin","borderRadius","maxWidth","width","paddingRight","textDecoration","color","fontWeight","fontSize","flex","textAlign","height","padding","title","flexDirection","open","paddingLeft","marginTop","release_date","runtime","overview","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal } from \"reactstrap\";\nimport TMDBMovieApiService from \"../apis/TMDBMovieApiService\";\nimport FavoriteMovieApiService from \"../apis/FavoriteMovieApiService\";\nimport CommentApiService from \"../apis/CommentApiService\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport Comments from \"./Comments\";\n\nclass DetailContentCompoent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_id: this.props.user_id,\n      id: this.props.id,\n      movie: this.props.movie,\n      modal: false, //Default modal value false\n      details: {},\n      genres: [],\n      //// Show the poster image as it is\n      poster_image:\n        \"http://image.tmdb.org/t/p/w500\" + this.props.movie.poster_path,\n      content: \"\", //comment\n    };\n  }\n //Add to wish list\n handleMovieSave = async () => {\n  var temp = {\n    movie_id : this.state.id,\n    movie_original_title : this.props.movie.original_title,\n    poster_path : this.props.movie.poster_path,\n    user_id : window.sessionStorage.getItem(\"user\"),\n    //user_email : JSON.parse(window.sessionStorage.getItem(\"user\")).userEmail,\n  };\n  console.log(temp);\n  // Save only when there is a user session value (login)\n  if(sessionStorage.getItem('user') != null){\n    await FavoriteMovieApiService.addMovie(temp)\n      .then(res => {\n        console.log(res.data);\n        //// Determining whether the movie is on my wish list or not.\n        if (res.data === 'success') {\n          console.info('save success', this.props.databaseid);\n          alert(\"I wished\");\n          this.setState({\n            modal: false,\n          })\n        } else {\n          alert(\"It's already on your wishlist.\");\n          this.setState({\n            modal: false,\n          })\n        }\n      })\n      .catch(err => {\n        console.error('ApiService.addMovies Error', err);\n        alert('Wish list save error\\nPlease contact the administrator');\n      })\n      ////If you are not logged in, move to the login screen when you click the wish button\n  } else {\n    alert('It is available after login.');\n    window.location.href=\"http://localhost:3000/login\";\n  }\n}\n\n  //delete wish list\n  handleMovieDelete = async () => {\n    \n    await FavoriteMovieApiService.removeMovie2(this.state.id)\n    .then(res => {\n      console.info('deletion success', res.state);\n      console.log(res.data);\n      if(res.data === 'success') {\n        alert(\"Deleted.\");\n        //When deleting from the My Favorites page\n        if(document.location.href === \"http://localhost:3000/myContent\") {\n          this.props.loadFavoriteMovie();\n          this.setState({\n            modal: false,\n          });\n        }\n        else {  //When deleting from another screen\n          this.setState({\n            modal: false,\n          });\n        }\n      }\n      else {  // When you click the delete button on the unlisted list\n        alert('Its not on my wish list.');\n        return;\n      }\n    })\n    .catch(err => {\n      console.error('ApiService.removeMovie Error', err);\n      alert('Wish list deletion error\\nPlease contact the administrator');\n    })\n}\n\n  //A method that calls all necessary data when an image is clicked\n  getAllInfo = () => {\n    this.getMovieDetails();\n    this.getMoviesYoutubeKey();\n    this.getMovieCredits();\n    this.getCommentList();\n  };\n\n  //Method to get movie details\n  getMovieDetails = async () => {\n    let res = await TMDBMovieApiService.getMovieDetails(this.state.id);\n    let genres = res.data.genres.map((item) => {\n      return item.name;\n    });\n    this.setState(\n      {\n        details: res.data,\n        genres: genres,\n      },\n      () => {\n        console.log(\"Details value when clicked!\", this.state.details);\n        console.log(\"this.state.poster_image : \", this.state.poster_image);\n        // console.log('Genre value when pressed!', this.state.genres);\n      }\n    );\n  };\n  //Method to get YouTube key value\n  getMoviesYoutubeKey = async () => {\n    let res = await TMDBMovieApiService.getYoutubeKey(this.state.id);\n    //If there is a YouTube video, save the key value\n    if (res.data.results[0] !== undefined) {\n      console.log(\"youtubeKey data:\", res.data.results[0].key);\n      //Only one representative YouTube video was brought and saved.\n      this.setState(\n        {\n          key:\n            \"https://youtube.com/embed/\" +\n            res.data.results[0].key +\n            \"?autoplay=1&controls=0&rel=0&loop=1\",\n        },\n        () => {\n          // console.log('youtubeKey value when pressed!', this.state.key);\n        }\n      );\n      //If it does not exist, the key is stored as false.\n    } else {\n      this.setState({ key: false });\n    }\n  };\n  //Method to get the list of participating actors\n  getMovieCredits = async () => {\n    let res = await TMDBMovieApiService.getCredits(this.state.id);\n    let cast = res.data.cast.slice(0, 6).map((item) => {\n      return item.name;\n    });\n    // console.log('Participating staff information:', res.data);\n    // console.log('Participating actors:', res.data.cast);\n    this.setState(\n      {\n        cast: cast,\n      },\n      () => {\n        // console.log('Cast value when pressed!', this.state.cast);\n      }\n    );\n  };\n\n  //Method to get list of comments\n  getCommentList = async () => {\n    let res = await CommentApiService.getCommentList(this.state.id);\n    let commentList = res.data;\n    this.setState({ comments: commentList }, () => {\n      console.log(\"Comment information!!!!\");\n      console.log(this.state.comments);\n    });\n  };\n  //A method that converts the received array into a comma-separated string.\n  seperactor = (Array) => {\n    var seperactor = \",\";\n    var tempString = \"\";\n    for (var i = 0; i < Array.length; i++) {\n      if (i < Array.length - 1) {\n        tempString += Array[i] + seperactor;\n      } else if (i === Array.length - 1) {\n        tempString += Array[i];\n      }\n    }\n    return tempString;\n  };\n\n  //A method that reverses true and false values\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  //State handler according to content change when commenting\n  handleText = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  //Write a comment\n  writeMovieComment = () => {\n    let user_id = sessionStorage.getItem(\"user\");\n    //Check the session value to see if you are logged in\n    if (user_id == null) {\n      alert(\"Login is required\");\n      //Send to login page\n      window.location.href = \"http://localhost:3000/login\";\n    }\n    let content = this.state.content;\n    //객체생성\n    let comment = {\n      movie_id: this.state.id,\n      user_id: user_id,\n      content: content,\n    };\n    //object creation\n    CommentApiService.writeMovieComment(comment)\n      .then((res) => {\n        console.log(res.data);\n        let result = res.data;\n        if (result === 1) {\n          alert(\"Completion of comment\");\n          this.getCommentList();\n          //Reset your comments\n          this.setState({ content: \"\" });\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  //Delete comment\n  deleteComment = (id, user_id) => {\n    // console.log(typeof this.props.user_id); //number\n    // console.log(typeof sessionStorage.getItem(\"user\")); //string\n    console.log(id); //ID value of the comment!\n    console.log(user_id);\n    //If the logged in user and the commenter are the same person, it can be deleted\n    if (sessionStorage.getItem(\"user\") === user_id.toString()) {\n      CommentApiService.deleteComment(id)\n        .then((res) => {\n          console.log(res.data); //deletion success\n          if (res.status === 200) {\n            alert(\"Comment has been deleted\");\n            //Reload the comment list after deletion\n            this.getCommentList();\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"btn bg-transparent\" onClick={this.toggle}>\n          {/* {images} */}\n          {this.state.poster_image === \"http://image.tmdb.org/t/p/w500null\" ? (\n            <img\n              alt=\"\"\n              src={\"https://i.ytimg.com/vi/GV3HUDMQ-F8/maxresdefault.jpg\"}\n              height=\"270\"\n              width=\"180\"\n              style={{ margin: \"5px\" }}\n            />\n          ) : (\n            <img\n              src={this.state.poster_image}\n              width=\"180px\"\n              alt=\"new\"\n              style={{ borderRadius: 5 }}\n              onClick={this.getAllInfo}\n            />\n          )}\n        </div>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          size=\"lg\"\n          className=\"my-modal\"\n          style={{ maxWidth: \"900px\", width: \"80%\" }}\n        >\n          <div className=\"container\">\n            <div className=\"row\">\n              <div\n                onClick={this.toggle}\n                style={{\n                  paddingRight: \"10px\",\n                  margin: \"5px\",\n                  textDecoration: \"none\",\n                  color: \"#777777\",\n                  fontWeight: \"bold\",\n                  fontSize: \"x-large\",\n                  flex: \"1\",\n                  textAlign: \"right\",\n                }}\n              >\n                <Icon.XCircleFill />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"vedio\">\n                  {this.state.key ? (\n                    <iframe\n                      title=\"Youtube Video Player\"\n                      className=\"video\"\n                      allowFullScreen\n                      frameBorder=\"0\"\n                      style={{\n                        width: \"100%\",\n                        height: \"50vh\",\n                        margin: 0,\n                        padding: 0,\n                      }}\n                      allow=\"autoplay\"\n                      src={this.state.key}\n                    ></iframe>\n                  ) : (\n                    \"There is no Youtube video\"\n                  )}\n\n                  <div>\n                    <h1 style={{ color: \"white\" }}>\n                      {this.state.details && this.state.details.title}\n                    </h1>\n                    <div style={{ flexDirection: \"row\" }}>\n                      <input\n                        className=\"btn btn-light btn-lg\"\n                        type=\"button\"\n                        value=\"▶ play\"\n                        style={{ margin: 5 }}\n                        onClick={() =>\n                          window.open(`${this.state.key}`, \"_blank\")\n                        }\n                      />\n                      <input\n                          className=\"btn btn-light btn-lg\"\n                          type=\"button\"\n                          value=\"❤\"\n                          style={{ margin: 5, borderRadius: 20 }}\n                          onClick={() => this.handleMovieSave()}\n                        />\n                      {sessionStorage.getItem(\"user\") != null ?\n                        <input\n                          className=\"btn btn-light btn-lg\"\n                          type=\"button\"\n                          value=\"❌ \"\n                          style={{ margin: 5, borderRadius: 20 }}\n                          onClick={() => this.handleMovieDelete(this.state.id)}\n                        />\n                        :''}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\" style={{ paddingLeft: \"24px\", marginTop: 15 }}>\n              <div className=\"col-8\">\n                <div className=\"content1\">\n                  <p className=\"contentFont\">\n                    {this.state.details.release_date &&\n                      this.state.details.release_date}{\" \"}\n                    {this.state.details.runtime && this.state.details.runtime}분\n                  </p>\n                  <p className=\"contentFont\" style={{ marginTop: 15 }}>\n                    {this.state.details.overview\n                      ? this.state.details.overview\n                      : \"No plot summary\"}\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-4\">\n                <div className=\"content2\">\n                  <div style={{ flexDirection: \"row\", marginBottom: 10 }}>\n                    <div style={{ textDecoration: \"none\", color: \"#777777\" }}>\n                      출연\n                    </div>\n                    <div className=\"detailFont\">\n                      {this.state.cast && this.seperactor(this.state.cast)}\n                    </div>\n                  </div>\n                  <div style={{ flexDirection: \"row\", marginBottom: 10 }}>\n                    <div style={{ textDecoration: \"none\", color: \"#777777\" }}>\n                      장르\n                    </div>\n                    <div className=\"detailFont\">\n                      {this.state.genres && this.seperactor(this.state.genres)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\" style={{ paddingLeft: \"24px\", marginTop: 20 }}>\n              <div className=\"col\">\n                <form className=\"form-inline\" style={{ width: \"100%\" }}>\n                  <textarea\n                    placeholder=\"Please enter a comment\"\n                    className=\"form-control\"\n                    rows=\"2\"\n                    cols=\"100\"\n                    name=\"content\"\n                    value={this.state.content}\n                    onChange={(e) => this.handleText(e)}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger btn-lg\"\n                    style={{ margin: 10 }}\n                    onClick={() => this.writeMovieComment()}\n                  >\n                    댓글\n                  </button>\n                </form>\n                <div className=\"comment\">\n                  {this.state.comments\n                    ? this.state.comments.map((item) => {\n                        return (\n                          <Comments\n                            key={item.id}\n                            id={item.id}\n                            movie_id={item.movie_id}\n                            user_id={item.user_id}\n                            content={item.content}\n                            deleteComment={this.deleteComment}\n                          />\n                        );\n                      })\n                    : \"\"}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default DetailContentCompoent;\n"]},"metadata":{},"sourceType":"module"}